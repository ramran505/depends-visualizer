name: Build Depends Visualizer

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    defaults:
      run:
        working-directory: app

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: üì¶ Install Python deps
        run: pip install pyinstaller

      - name: ‚¨áÔ∏è Download & extract Graphviz
        if: matrix.os != 'macos-latest'
        run: |
          mkdir -p graphviz
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            curl -L -o gv.zip https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/13.1.1/windows_10_cmake_Release_Graphviz-13.1.1-win64.zip
            unzip gv.zip
            EXTRACTED_DIR=$(find . -type d -name "Graphviz*" | head -n 1)
            if [[ "$EXTRACTED_DIR" != "./graphviz" ]]; then
              mv "$EXTRACTED_DIR"/* graphviz/
            fi
          else
            curl -L https://gitlab.com/api/v4/projects/4207231/packages/generic/graphviz-releases/13.1.1/graphviz-13.1.1.tar.gz | tar xz
            EXTRACTED_DIR=$(find . -type d -name 'graphviz*' | head -n 1)
            if [[ "$EXTRACTED_DIR" != "./graphviz" ]]; then
              mv "$EXTRACTED_DIR"/* graphviz/
            fi
          fi


      - name: üçé Install Graphviz (macOS)
        if: matrix.os == 'macos-latest'
        run: sudo port install graphviz

      - name: ‚¨áÔ∏è Download & extract OpenJDK
        run: |
          mkdir -p openjdk
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            curl -L -o jdk.zip https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.8%2B9/OpenJDK21U-jdk_x64_windows_hotspot_21.0.8_9.zip
            unzip jdk.zip
            mv OpenJDK*/openjdk*/* openjdk/
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            curl -L https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.8%2B9/OpenJDK21U-jdk_x64_mac_hotspot_21.0.8_9.tar.gz | tar xz
            find . -type d -name 'jdk-*' | head -n1 | xargs -I{} mv {}/jdk*/* openjdk/
          else
            curl -L https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.8%2B9/OpenJDK21U-jdk_x64_linux_hotspot_21.0.8_9.tar.gz | tar xz
            find . -type d -name 'jdk-*' | head -n1 | xargs -I{} mv {}/jdk*/* openjdk/
          fi

      - name: üì¶ Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: app/dep-visualizer/package-lock.json

      - name: üì¶ Install frontend deps & build
        run: |
          cd dep-visualizer
          npm ci
          npm run build
          cd ..

      - name: üõ†Ô∏è Build with PyInstaller
        run: pyinstaller depends_visualize.spec --noconfirm

      - name: üìÑ Show dist contents
        if: matrix.os == 'windows-latest'
        run: dir dist

      - name: üì§ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: depends_visualize-${{ matrix.os }}
          path: app/dist/depends_visualize*
